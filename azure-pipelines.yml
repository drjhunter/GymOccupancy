# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

stages:
- stage: BuildWebApp
  jobs:
  - job: Build
    pool:
      vmImage: 'vs2017-win2016'
    variables:
      nugetFile: 'charting-webapp/NuGet.config'
      projectFile: 'charting-webapp/charting-webapp.csproj'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'
  
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: 'restore'
        projects: $(projectFile)
        nugetConfigPath: $(nugetFile)


    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'
        projects: $(projectFile)
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(Build.ArtifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: DotNetCoreCLI@2
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True

    - task: PublishBuildArtifacts@1
      displayName: 'dotnet publish'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        
        

- stage: DeployWebApp
  jobs:
  - job: Deploy
    pool: 
      vmImage: 'vs2017-win2016'
    steps:
    - task: DownloadBuildArtifacts@0
      displayName: 'download build artifact'
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.DefaultWorkingDirectory)'
    - task: AzureRmWebAppDeployment@4
      displayName: 'Azure RM deploy'
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Az400JulyHotmailAzureFreePassExpires190820'
        appType: 'webApp'
        WebAppName: 'chartin-webapp'
        packageForLinux: '$(System.DefaultWorkingDirectory)/*.zip'
        AppSettings: '-PROJECT charting-webapp/charting-webapp.csproj'


